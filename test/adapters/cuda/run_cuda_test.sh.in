#!/bin/bash

## 
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2012, 
##    RWTH Aachen University, Germany
##    Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##    Technische Universitaet Dresden, Germany
##    University of Oregon, Eugene, USA
##    Forschungszentrum Juelich GmbH, Germany
##    German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##    Technische Universitaet Muenchen, Germany
##
## See the COPYING file in the package base directory for details.
##

## file       run_cuda_test.sh

echo "===== CUDA Compile and Run Test ====="

rm -f cuda_test

# Get SRC_ROOT
SRC_ROOT=@abs_top_srcdir@/..

./scorep -v --build-check nvcc $SRC_ROOT/test/adapters/cuda/cuda_test.cu -o cuda_test -I.

### Check various combinations of CUDA runtime features ###
features=""
for cudaapi in "" "runtime" "driver"
do

  for kernel in "" ",kernel"
  do

    for idle in "" ",idle" ",pure_idle"
    do

      if [ "$idle" = ",idle" -a "x$kernel" = "x" ]; then
        continue
      fi

      for mcpy in "" ",memcpy"
      do

        if [ "$idle" = ",pure_idle" -a "x$mcpy" = "x" ]; then
          continue
        fi

          for synchr in "" ",sync"
          do

          # continue if neither kernel nor memory copy is enabled
          if [ "$synchr" = ",sync" -a "x$kernel" = "x" -a "x$mcpy" = "x" ]; then
            continue
          fi

          for streamreuse in "" ",stream_reuse"
          do

            # if stream reuse is enabled, but no GPU activities enabled continue
            if [ "$streamreuse" = ",stream_reuse" -a "x$kernel" = "x" -a "x$mcpy" = "x" ]; then
              continue
            fi

            for memusage in "" ",gpumemusage"
            do

              features=${cudaapi}

              if [ "x$features" = "x" -a "$kernel" = ",kernel" ]; then
                kernel="kernel"
              fi
              features="${features}${kernel}"

              if [ "x$features" = "x" -a "${mcpy}" = ",memcpy" ]; then
                mcpy="memcpy"
              fi
              features="${features}${mcpy}${synchr}${idle}${streamreuse}${memusage}"

              SCOREP_CUDA_ENABLE=${features} \
              SCOREP_OVERWRITE_EXPERIMENT_DIRECTORY=true \
              SCOREP_EXPERIMENT_DIRECTORY=scorep-serial-cuda \
              ./cuda_test

              if [ $? -ne 0 ]; then
                  rm -rf scorep-measurement-tmp
                  exit 1
              fi

            done #memusage
          done #streamreuse
        done #sync
      done #memcpy
    done #idle
  done #kernel
done #cudaapi


echo "====================================="

exit 0
