${guard:start}
/**
 * Measurement wrapper for ${name}
 * @note Auto-generated by wrapgen from template: ptp_sendinit.w
 * @note C interface
 * @note Introduced with MPI-${mpi:version}
 * @ingroup ${group|lowercase}
 */
${proto:c}
{
  const int event_gen_active = IS_EVENT_GEN_ON_FOR(${group|uppercase});
  int return_val, sz;

  if (event_gen_active)
    {
      EVENT_GEN_OFF();
      esd_enter(epk_mpi_regid[EPK__${name|uppercase}]);
    }

  PMPI_Type_size(datatype, &sz);

  return_val = ${call:pmpi};
  if (dest != MPI_PROC_NULL && return_val == MPI_SUCCESS)
    epk_request_create(*request, (ERF_SEND | ERF_IS_PERSISTENT),
                       tag, dest, count*sz, datatype, comm);

  if (event_gen_active)
    {
      esd_exit(epk_mpi_regid[EPK__${name|uppercase}]);
      EVENT_GEN_ON();
    }

  return return_val;
}
${guard:end}
