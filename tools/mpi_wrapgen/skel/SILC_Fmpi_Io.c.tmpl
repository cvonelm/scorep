
/**
 * @file  SILC_Fmpi_Io.c
 * @maintainer Daniel Lorenz <d.lorenz@fz-juelich.de>
 * @status     ALPHA
 * @ingroup    MPI_Wrapper
 * 
 * @brief Fortran interface wrappers for parallel I/O
 */

#include "SILC_Fmpi.h"
#include "config.h"

/* lowercase defines */
#pragma wrapgen multiple restrict(gio)      skel/SILC_Fmpi_DefineL.w

#pragma wrapgen multiple restrict(gio_ext)  skel/SILC_Fmpi_DefineL.w

#pragma wrapgen multiple restrict(gio_misc+!n_c2f+!n_f2c) skel/SILC_Fmpi_DefineL.w

/* uppercase defines */
#pragma wrapgen multiple restrict(gio)      skel/SILC_Fmpi_DefineU.w

#pragma wrapgen multiple restrict(gio_ext)  skel/SILC_Fmpi_DefineU.w

#pragma wrapgen multiple restrict(gio_misc+!n_c2f+!n_f2c) skel/SILC_Fmpi_DefineU.w


#ifndef NEED_F2C_CONV

/* If MPI_Comm_f2c is HAVE as a simple macro (which typically does nothing)
 * as it would require a "real" function if it is really needed
 * => we can save the f2c and c2s conversions */

/**
 * @name Fortran wrappers for administrative functions
 * @{
 */

#pragma wrapgen multiple regex(MPI_File.*(open|close|delete|preallocate|get_[abgipstv]|set_[abgipstv]|seek|sync).*) skel/SILC_Fmpi_Std.w
#pragma wrapgen single MPI_Register_datarep skel/SILC_Fmpi_Std.w

/**
 * @}
 * @name Fortran wrappers for access functions
 * @{
 */

/* MPI Implementation which use ROMIO can have no general support for MPI_Requests
   in asynchronous file IO operations. This leads to a different signature and
   thus to compiler errors. To avoid compilation errors, the asynchronous file
   IO functions are not wrapped if ROMIO is used and they support no general
   MPI_Requests.
*/
#if !defined(ROMIO_VERSION) || defined(MPIO_USES_MPI_REQUEST)

#pragma wrapgen multiple regex(MPI_File.*(iread|iwrite).*$)  skel/SILC_Fmpi_Std.w

#endif /* !defined(ROMIO_VERSION) || defined(MPIO_USES_MPI_REQUEST) */

#pragma wrapgen multiple regex(MPI_File.*(_read|_write).*$)  skel/SILC_Fmpi_Std.w

/**
 * @}
 * @name Fortran wrappers for error handling functions
 * @{
 */

#pragma wrapgen multiple restrict(gio_err)  skel/SILC_Fmpi_Std.w

#else /* !NEED_F2C_CONV */

/**
 * @}
 * @name Fortran wrappers for administrative functions
 * @{
 */

#pragma wrapgen multiple regex(MPI_File.*(open|close|delete|preallocate|get_[abgipstv]|set_[abgipstv]|seek|sync).*) skel/SILC_Mpi_F2c_C2f.w
#pragma wrapgen single MPI_Register_datarep skel/SILC_Mpi_F2c_C2f.w


/**
 * @}
 * @name Fortran wrappers for access functions
 * @{
 */

#pragma wrapgen multiple regex(MPI_File.*(read|write).*$)  skel/SILC_Mpi_F2c_C2f.w

/**
 * @}
 * @name Fortran wrappers for error handling functions
 * @{
 */

#pragma wrapgen multiple restrict(gio_err)  skel/SILC_Mpi_F2c_C2f.w

/**
 * @}
 * @name Fortran wrappers for handle conversion functions
 * @{
 */

#pragma wrapgen multiple restrict(gio_misc+!n_c2f+!n_f2c) skel/SILC_Mpi_F2c_C2f.w

#endif /* !NEED_F2C_CONV */

/**
 * @}
 */
