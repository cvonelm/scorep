/****************************************************************************
**  SCALASCA    http://www.scalasca.org/                                   **
**  KOJAK       http://www.fz-juelich.de/jsc/kojak/                        **
*****************************************************************************
**  Copyright (c) 1998-2009                                                **
**  Forschungszentrum Juelich, Juelich Supercomputing Centre               **
**                                                                         **
**  Copyright (c) 2003-2008                                                **
**  University of Tennessee, Innovative Computing Laboratory               **
**                                                                         **
**  See the file COPYRIGHT in the package base directory for details       **
****************************************************************************/

/**
 * @file  SILC_Fmpi_Io.c
 * 
 * @brief Fortran interface wrappers for parallel I/O
 */

/* lowercase defines */
#pragma wrapgen multiple restrict(gio)      skel/SILC_Mpi_DefineL.w

#pragma wrapgen multiple restrict(gio_ext)  skel/SILC_Mpi_DefineL.w

#pragma wrapgen multiple restrict(gio_misc+!n_c2f+!n_f2c) skel/SILC_Mpi_DefineL.w

/* uppercase defines */
#pragma wrapgen multiple restrict(gio)      skel/SILC_Mpi_DefineU.w

#pragma wrapgen multiple restrict(gio_ext)  skel/SILC_Mpi_DefineU.w

#pragma wrapgen multiple restrict(gio_misc+!n_c2f+!n_f2c) skel/SILC_Mpi_DefineU.w


#ifndef NEED_F2C_CONV

/* If MPI_Comm_f2c is defined as a simple macro (which typically does nothing)
 * as it would require a "real" function if it is really needed
 * => we can save the f2c and c2s conversions */

/**
 * @name Fortran wrappers for administrative functions
 * @{
 */

#pragma wrapgen multiple regex(MPI_File.*(open|close|delete|get_[abgipstv]|set_[abgipstv]|seek|sync).*) skel/SILC_Mpi_Fstd.w
#pragma wrapgen single MPI_Register_datarep skel/SILC_Mpi_Fstd.w

/**
 * @}
 * @name Fortran wrappers for access functions
 * @{
 */

#pragma wrapgen multiple regex(MPI_File.*(read|write).*$)  skel/SILC_Mpi_Fstd.w

/**
 * @}
 * @name Fortran wrappers for error handling functions
 * @{
 */

#pragma wrapgen multiple restrict(gio_err)  skel/SILC_Mpi_Fstd.w

#else /* !NEED_F2C_CONV */

/**
 * @}
 * @name Fortran wrappers for administrative functions
 * @{
 */

#pragma wrapgen multiple regex(MPI_File.*(open|close|delete|get_[abgipstv]|set_[abgipstv]|seek|sync).*) skel/SILC_Mpi_F2c_C2f.w
#pragma wrapgen single MPI_Register_datarep skel/SILC_Mpi_F2c_C2f.w


/**
 * @}
 * @name Fortran wrappers for access functions
 * @{
 */

#pragma wrapgen multiple regex(MPI_File.*(read|write).*$)  skel/SILC_Mpi_F2c_C2f.w

/**
 * @}
 * @name Fortran wrappers for error handling functions
 * @{
 */

#pragma wrapgen multiple restrict(gio_err)  skel/SILC_Mpi_F2c_C2f.w

/**
 * @}
 * @name Fortran wrappers for handle conversion functions
 * @{
 */

#pragma wrapgen multiple restrict(gio_misc+!n_c2f+!n_f2c) skel/SILC_Mpi_F2c_C2f.w

#endif /* !NEED_F2C_CONV */

/**
 * @}
 */
