#include "SILC_Fmpi.h"
#include "config.h"

/**
 * @file  SILC_Fmpi_Env.c
 * @maintainer Daniel Lorenz <d.lorenz@fz-juelich.de>
 * @status     ALPHA
 * @ingroup    MPI_Wrapper
 * 
 * @brief Fortran interface wrappers for environmental management
 */

/* uppercase defines */
#pragma wrapgen single MPI_Init_thread skel/SILC_Fmpi_DefineU.w

#pragma wrapgen multiple restrict(genv+!nMPI_Init_thread) skel/SILC_Fmpi_DefineU.w

/* lowercase defines */
#pragma wrapgen single MPI_Init_thread skel/SILC_Fmpi_DefineL.w

#pragma wrapgen multiple restrict(genv+!nMPI_Init_thread) skel/SILC_Fmpi_DefineL.w

/**
 * @name Fortran wrappers 
 * @{
 */

#ifndef NEED_F2C_CONV

/* If MPI_Comm_f2c is HAVE as a simple macro (which typically does nothing)
 * as it would require a "real" function if it is really needed
 * => we can save the f2c and c2s conversions */

#if HAVE(DECL_PMPI_INIT_THREAD)
/**
 * Measurement wrapper for MPI_Init_tread
 * @note Manually adapted wrapper
 * @note Fortran interface
 * @note Introduced with MPI-2
 * @ingroup env
 */
void FSUB(MPI_Init_thread)(int* required,
                           int* provided,
                           int* ierr)
{
  *ierr = MPI_Init_thread(0, (char***)0, *required, provided);
}
#endif

/**
 * Measurement wrapper for MPI_Init
 * @note Manually adapted wrapper
 * @note Fortran interface
 * @note Introduced with MPI-1
 * @ingroup env
 */
void FSUB(MPI_Init)(int* ierr)
{
  *ierr = MPI_Init(0, (char***)0);
}

#pragma wrapgen multiple restrict(genv+!nMPI_Init) skel/SILC_Fmpi_Std.w

#else /* !NEED_F2C_CONV */

#if HAVE(DECL_PMPI_INIT_THREAD)
/**
 * Measurement wrapper for MPI_Init_tread
 * @note Manually adapted wrapper
 * @note Fortran interface
 * @note Introduced with MPI-2
 * @ingroup env
 */
void FSUB(MPI_Init_thread)(int* required,
                           int* provided,
                           int* ierr)
{
  if (sizeof(MPI_Fint) != sizeof(int))
  {
    SILC_ERROR(SILC_ERROR_F2C_INT_SIZE_MISMATCH, "" );
  }
  *ierr = MPI_Init_thread(0, (char***)0, *required, provided);
}
#endif

/**
 * Measurement wrapper for MPI_Init
 * @note Manually adapted wrapper
 * @note Fortran interface
 * @note Introduced with MPI-1
 * @ingroup env
 */
void FSUB(MPI_Init)(int* ierr)
{
  if (sizeof(MPI_Fint) != sizeof(int))
  {
    SILC_ERROR(SILC_ERROR_F2C_INT_SIZE_MISMATCH, "" );
  }
  *ierr = MPI_Init(0, (char***)0);
}

#pragma wrapgen multiple restrict(genv+!nMPI_Init) skel/SILC_Mpi_F2c_C2f.w

#endif

/**
 * @}
 */
