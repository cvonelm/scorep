${guard:start}
/**
 * Measurement wrapper for ${name}
 * @note Auto-generated by wrapgen from template: coll.w
 * @note C interface
 * @note Introduced with MPI-${mpi:version}
 * @ingroup ${group|lowercase}
 * It wraps the mpi call with an enter and exit event. Additionally, a collective
 * event is generated in between the enter and exit event after the PMPI call.
 */
${proto:c} 
{
  ${rtype} return_val;
  ${declarehooks};

  if (SILC_MPI_IS_EVENT_GEN_ON_FOR(SILC_MPI_ENABLED_${group|uppercase}))
    {
      ${decl}

      SILC_MPI_EVENT_GEN_OFF();
      SILC_EnterRegion(silc_mpi_regid[SILC__${name|uppercase}]);
      
      ${guard:hooks}
        ${check:hooks}
          ${call:prehook};
      ${guard:end}

      return_val = ${call:pmpi};
      
      ${guard:hooks}
        ${check:hooks}
          ${call:posthook};
      ${guard:end}

      ${xblock}
      SILC_MpiCollective(silc_mpi_regid[SILC__${name|uppercase}],
		       SILC_MPI_COMM_ID(comm), 
                       root_loc,
                       ${mpi:sendcount}, 
                       ${mpi:recvcount});
      SILC_ExitRegion(silc_mpi_regid[SILC__${name|uppercase}]);
      SILC_MPI_EVENT_GEN_ON();
    }
  else
    {
      return_val = ${call:pmpi};
    }

  return return_val;
}
${guard:end}
