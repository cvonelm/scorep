${guard:start}
/**
 * Declaration of PMPI-symbol for ${name}
 */
${proto:c(P)};

/**
 * Measurement wrapper for ${name}
 * @note Auto-generated by wrapgen from template: SCOREP_Mpi_WinCreate.w
 * @note C interface
 * @note Introduced with MPI-${mpi:version}
 * @ingroup ${group|lowercase}

 * Triggers five events: Enter, RmaCollectiveBegin, WinCreate,
 * RmaCollectiveEnd, and Leave.
 */
${proto:c}
{
  SCOREP_IN_MEASUREMENT_INCREMENT();
  const int event_gen_active           = SCOREP_MPI_IS_EVENT_GEN_ON;
  const int event_gen_active_for_group = SCOREP_MPI_IS_EVENT_GEN_ON_FOR(SCOREP_MPI_ENABLED_${group|uppercase});
  ${rtype}  return_val;

  SCOREP_RmaWindowHandle win_handle = SCOREP_INVALID_RMA_WINDOW;

  if (event_gen_active)
  {
    SCOREP_MPI_EVENT_GEN_OFF();
    if (event_gen_active_for_group)
    {
      ${xblock:pre}

      SCOREP_EnterWrappedRegion(scorep_mpi_regions[SCOREP_MPI_REGION__${name|uppercase}]);
      SCOREP_RmaCollectiveBegin( SCOREP_RMA_SYNC_LEVEL_PROCESS );
    }
    else if ( SCOREP_IsUnwindingEnabled() )
    {
      SCOREP_EnterWrapper(scorep_mpi_regions[SCOREP_MPI_REGION__${name|uppercase}]);
    }
  }

  SCOREP_ENTER_WRAPPED_REGION();
  return_val = ${call:pmpi};
  SCOREP_EXIT_WRAPPED_REGION();

  if (event_gen_active)
  {
    if (event_gen_active_for_group)
    {
      if (*win != MPI_WIN_NULL)
      {
        win_handle = scorep_mpi_win_create( "${attribute(window_name)}", *win, comm );
        SCOREP_RmaWinCreate( win_handle );
      }

      ${xblock:post}

      SCOREP_RmaCollectiveEnd( SCOREP_COLLECTIVE_${attribute(collective_type)},
                               SCOREP_RMA_SYNC_LEVEL_PROCESS,
                               win_handle, SCOREP_INVALID_ROOT_RANK, 0, 0);
      SCOREP_ExitRegion(scorep_mpi_regions[SCOREP_MPI_REGION__${name|uppercase}]);
    }
    else if ( SCOREP_IsUnwindingEnabled() )
    {
      SCOREP_ExitWrapper(scorep_mpi_regions[SCOREP_MPI_REGION__${name|uppercase}]);
    }
    SCOREP_MPI_EVENT_GEN_ON();
  }

  SCOREP_IN_MEASUREMENT_DECREMENT();
  return return_val;
}
${guard:end}
