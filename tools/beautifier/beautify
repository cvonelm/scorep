#!/bin/bash

# NAME
#     beautify
# 
# DESCRIPTION
#     Beautify all modified and added source files in your svn working copy.
#     Without beautification, a svn commit may be rejected. Currently, the 
#     beautification is performed by "uncrustify" using the configuration
#     file "tools/beautifier/beautify.cfg".
#
# PRECONDITION
#     Your working copy must contain everything under trunk, branches/FOO or
#     tags/BAR, i.e. you checkout was one of 
#       "svn co $REPOSITORY_ROOT/project/trunk"
#       "svn co $REPOSITORY_ROOT/project/branches/<FOO>"
#       "svn co $REPOSITORY_ROOT/project/tags/<BAR>"
#
# OPTIONS/ARGUMENTS
#     beautify does not take any options and/or arguments.
#
# USAGE
#     Call beautify from anywhere in your svn working copy.
#
# AUTHOR
#     Christian Roessel <c.roessel@fz-juelich.de> 

AWK=awk
BEAUTIFY=uncrustify
BEAUTIFY_CONFIG=tools/beautifier/beautify.cfg
GREP=grep
SVN=svn

export LC_ALL=
export LANG=C

################################################################################
# General idea:
# - cd to the top-level directory of your svn working copy in order to find 
#   all modified and added source files and to get access to the beautifier's
#   config file.
# - beautify these files (unless they have zero size) in place and make a
#   backup.

# cd to top-level directory, i.e. something svn controlled at a equivalent level
# to (trunk|branches/<FOO>|tags/<BAR>). Count "/"s in path therefore.
REPOS_ROOT_LEVEL=`$SVN info | $GREP "Repository Root" |                        \
                  $AWK -F "/" '{print NF}'`
CURRENT_LEVEL=`$SVN info | $GREP "URL" | $AWK -F "/" '{print NF}'`
OFFSET=1
if $SVN info | $GREP "URL" | $GREP -e 'branches\|tags' > /dev/null; then
    OFFSET=2
fi
let N_DIRS_UP=$CURRENT_LEVEL-$REPOS_ROOT_LEVEL-$OFFSET
#echo "REPOS_ROOT_LEVEL $REPOS_ROOT_LEVEL"
#echo "CURRENT_LEVEL $CURRENT_LEVEL"
#echo "OFFSET $OFFSET"
#echo `pwd`
if [ $N_DIRS_UP -gt 0 ]; then
    for i in `seq $N_DIRS_UP`; do
        cd ..
#        echo `pwd`
        if [ ! -d ".svn" ]; then
            # Can happen if you checked out just a subdir of (trunk|
            # branch/<FOO>|tag/<BAR>). $BEAUTIFY will not find it's cfg file.
            echo "Beautifying aborted: It seems that you are working on a partial working copy only as I can't find the top level directory." 
            exit 1
        fi
    done
fi

# Top-level directory reached, check if beautify's config file is available.
if [ ! -f "$BEAUTIFY_CONFIG" ]; then
    echo "Beautifying aborted: Can't find file \"$BEAUTIFY_CONFIG\" under"
    echo "                     \"`pwd`/\"."
    exit 1
fi

# Find and beautify modified and added source files.
RELEVANT_FILES=`$SVN status | $GREP -e '^M\|^A' |                              \
                $AWK '{print substr($0, 8)}' |                                 \
                $GREP -e '\.c$\|\.h$\|\.cpp$\|\.hpp$'`
if [ -n "$RELEVANT_FILES" ]; then
    echo "Beautifying modified source files: $RELEVANT_FILES"
    for FILE in $RELEVANT_FILES; do
        if [ ! -s $FILE ]; then # file is zero size
            echo "Beautifying skipped for file \"$FILE\"."
            continue
        fi
        $BEAUTIFY -c $BEAUTIFY_CONFIG --replace -q $FILE
        if [ $? -ne 0 ]; then
            echo "Beautifying aborted: \"`which $BEAUTIFY`\" failed on file \"$FILE\"."
            exit 1
        fi
        echo "Beautifying $FILE"
    done
fi
echo "Beautifying successful. Ready for commit."
echo
exit 0
